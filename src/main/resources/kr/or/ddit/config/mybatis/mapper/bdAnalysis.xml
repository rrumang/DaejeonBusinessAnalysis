<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="bdAnalysis">

<!-- ========================== 상권평가 메뉴 ========================== -->
	<!-- <<<<<<<<<<<< 분석설정 정보 >>>>>>>>>>>> -->
	
	<!-- 분석지역  - 풀 네임 문자열 출력 -->
	<select id="getRegionFullName" parameterType="map" resultType="string">
		SELECT  '대전광역시' || LPAD(' ',1) || B.REGION_NAME || LPAD(' ',1) || A.REGION_NAME
		FROM    REGION A
		       ,(SELECT * FROM REGION WHERE REGION_CD = #{gu}) B
		WHERE   A.REGION_CD = #{dong}
		AND     A.REGION_CD2 = B.REGION_CD
	</select>
	
	
	<!-- 분석업종 - 풀 네임 문자열 출력 -->
	<select id="getTobFullName" parameterType="map" resultType="string">
		SELECT  C.TOB_NAME || RPAD(LPAD('>',2),3) || B.TOB_NAME || RPAD(LPAD('>',2),3) || A.TOB_NAME
		FROM    TOB A
		      ,(SELECT  * FROM TOB WHERE TOB_CD = #{midTob}) B
		      ,(SELECT  * FROM TOB WHERE TOB_CD = #{topTob}) C
		WHERE   A.TOB_CD  = #{botTob}
		AND     A.TOB_CD2 = B.TOB_CD 
		AND     B.TOB_CD2 = C.TOB_CD
	</select>
	
	<!-- <<<<<<<<<<<< 상권 주요 정보 >>>>>>>>>>>> -->
	
	<!-- 분석 지역의 면적 조회 (단위 : m^2) -->
	<select id="getRegionExtent" parameterType="long" resultType="int">
		SELECT  REGION_EXTENT * 100000
		FROM    REGION
		WHERE   REGION_CD = #{region_cd}
	</select>
	
	<!-- 업소수 - '음식'의 업소수 조회 ( 선택지역 / 음식 ) -->
	<select id="getStoreCount_Food" parameterType="long" resultType="int">
		SELECT  COUNT(*)
		FROM    STORE
		WHERE   REGION_CD = #{region_cd}
		AND     TOB_CD LIKE 'Q%'
	</select>
	
	<!-- 업소수 - '서비스'의 업소수 조회 ( 선택지역 / 서비스 ) -->	
	<select id="getStoreCount_Service" parameterType="long" resultType="int">
		SELECT  COUNT(*)
		FROM    STORE
		WHERE   REGION_CD = #{region_cd}
		AND     TOB_CD LIKE 'F%'
	</select>
	
	<!-- 업소수 - '소매'의 업소수 조회 ( 선택지역 / 소매 ) -->
	<select id="getStoreCount_Retail" parameterType="long" resultType="int">
		SELECT  COUNT(*)
		FROM    STORE
		WHERE   REGION_CD = #{region_cd}
		AND     TOB_CD LIKE 'D%'
	</select>
	
	<select id="getStoreCount_SelectedTob" parameterType="map" resultType="int">
		SELECT  COUNT(*)
		FROM    STORE
		WHERE   REGION_CD = #{region_cd}
		AND     TOB_CD = #{tob_cd}
	</select>
	
	<!-- 직장인구 통계 조회  (데이터 기준 : 2017)-->
	<select id="getWpCount" parameterType="long" resultType="int"> 
		SELECT  SUM(WP_CNT)
		FROM    WP
		WHERE   REGION_CD = #{region_cd}
	</select>
	
	<!-- 주거인구 통계 조회 (데이터 기준 : 201906) -->	
	<select id="getLpCount" parameterType="long" resultType="int">
		SELECT  SUM(LP_CNT)
		FROM    LP
		WHERE   REGION_CD = #{region_cd}
	</select>
	
	<!-- 유동인구 (성별기준 테이블) 통계 조회 (데이터 기준: 2018)-->
	<select id="getPpgCount" parameterType="long" resultType="int">
		SELECT  TRUNC(SUM(PPG_CNT) / 4)
		FROM    PPG
		WHERE   REGION_CD = #{region_cd}	
	</select>	

	
	<!-- 분석지역에서 분석업종의 총 매출/건수 조회 (날짜 기준: 가장 최신 데이터) -->
	<select id="getSelectedTobSales" parameterType="map" resultType="salesVo">
		SELECT  *
		FROM    SALES
		WHERE   REGION_CD = #{region_cd}
		AND     TOB_CD = #{tob_cd}
		AND     SALES_DT = (SELECT  TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) -MIN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) - SALES_DT) 
		                    FROM    SALES)
	</select>
	
	
	
	<!-- 분석지역의 성장성 - 매출증감률 조회 (날짜 기준 : 가장 최신 데이터) -->
	<select id="getSalesGrowthRate" parameterType="long" resultType="float">
		SELECT  ROUND( (CUR.SALE - PREV.SALE)/PREV.SALE * 100, 1 ) 
		FROM    (SELECT  SUM(SALES_MONTHLY) SALE
		        FROM    SALES
		        WHERE   REGION_CD = #{region_cd}
		        AND     REGEXP_LIKE(TOB_CD, 'Q|D|F')
		        AND     SALES_DT =  (SELECT TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) -MIN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) - SALES_DT)
		                             FROM    SALES)) CUR,
		        (SELECT  SUM(SALES_MONTHLY) SALE             
		        FROM    SALES
		        WHERE   REGION_CD = #{region_cd}
		        AND     REGEXP_LIKE(TOB_CD, 'Q|D|F')
		        AND     SALES_DT =  (SELECT TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) -MIN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) - SALES_DT)-1
		                             FROM    SALES)) PREV
	</select>	
	
	
	<!-- 분석지역의 성장성 - 상권매출비중 조회 (날짜 기준 : 가장 최신 데이터) -->
	<select id="getBdSalesRate" parameterType="long" resultType="float">
		SELECT  ROUND(CUR.SALE1 / (SELECT  SUM(SALES_MONTHLY)
		                        FROM    SALES
		                        WHERE   REGEXP_LIKE(TOB_CD, 'Q|D|F')
		                        AND     SALES_DT = (SELECT TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) -MIN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) - SALES_DT)
		                                            FROM    SALES)) * 100 ,2)
		        - ROUND((PREV.SALE2 / (SELECT  SUM(SALES_MONTHLY)
		                        FROM    SALES
		                        WHERE   REGEXP_LIKE(TOB_CD, 'Q|D|F')
		                        AND     SALES_DT = (SELECT TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) -MIN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) - SALES_DT)-1
		                                            FROM    SALES))) * 100,2)
		FROM
		    (SELECT  REGION_CD CD1
		            ,SUM(SALES_MONTHLY) SALE1
		    FROM    SALES
		    WHERE   REGION_CD = #{region_cd}
		    AND     REGEXP_LIKE(TOB_CD, 'Q|D|F')
		    AND     SALES_DT = (SELECT TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) -MIN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) - SALES_DT)
		                         FROM    SALES) 
		    GROUP BY REGION_CD) CUR LEFT JOIN
		    (SELECT  REGION_CD CD2
		            ,SUM(SALES_MONTHLY) SALE2
		    FROM    SALES
		    WHERE   REGION_CD = #{region_cd}
		    AND     REGEXP_LIKE(TOB_CD, 'Q|D|F')
		    AND     SALES_DT = (SELECT TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) -MIN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) - SALES_DT)-1
		                         FROM    SALES) 
		    GROUP BY REGION_CD) PREV ON (CUR.CD1 = PREV.CD2)
	</select>
	
	<!-- 대전시 내 모든 동의 region_cd코드값을 조회 -->
	<select id="getTotalDongList" resultType="long">
		select	region_cd
		from	region
		where	region_cl = 2
	</select>
	
	
	
	<!-- 분석 실행시 report테이블에 분석 이력을 insert한다 -->
	<insert id="insert_BdAnalysisReport" parameterType="reportVo">
		INSERT INTO REPORT
		(
			REPORT_CD
		   ,MEMBER_ID
		   ,TOB_CD
		   ,REGION_CD
		   ,REPORT_KIND
		   ,REPORT_DT
		)
		VALUES(
			'report' || REPORT_SEQ.NEXTVAL
		   ,#{member_id}
		   ,#{tob_cd}
		   ,#{region_cd}
		   ,1
		   ,SYSDATE
		)
		<selectKey keyProperty="report_cd" resultType="String" order="AFTER">
			SELECT 'report' || REPORT_SEQ.CURRVAL report_cd
			FROM DUAL
		</selectKey>
		
	</insert>
	
	<!-- 분석 이력메뉴에서 상권분석 보고서를 재 조회 요청시 조회할 reportVo -->
	<select	id="getReportVo" parameterType="string" resultType="reportVo">
		select	*
		from	report
		where	report_cd = #{report_cd}
	</select>
	
	
	<!-- 분석지역의 안정성 - 점포수 변동률 조회 (날짜 기준 : 1년의 각 분기 
	<select id="getStoreCnt_ChangeRate" parameterType="long" resultType="float">
		select  round(avg( (cnt - decode(pre_cnt, null, cnt-2, pre_cnt)) / decode(pre_cnt, null, cnt-2, pre_cnt) * 100), 2) 
		from
		(select BD_DT, BD_CL, region_cd, cnt, lag(cnt) over (order by bd_dt )pre_cnt, 
		lead(cnt) over (order by bd_dt )post_cnt
		from 
		(select  BD_DT, BD_CL, region_cd
		       ,sum(BD_CNT) cnt
		from    bd
		where   region_cd = #{region_cd}
		and     REGEXP_LIKE(tob_cd, 'Q|D|F')
		and     bd_cl = 1
		group by bd_dt, bd_cl, region_cd)
		order by bd_dt)
	</select>
	
	분석지역의 안정성 - 매출변동률 조회 (기간 : 반기 )
	<select id="getSalesRate" parameterType="long" resultType="float">
		select  round(avg( (acount - decode(pre_acnt,null, acount-500, pre_acnt)) / decode(pre_acnt,null, acount-500, pre_acnt) * 100 ),2) 매출변동평균 
		from
		(select  a.* , lag(acount) over (order by sales_dt )pre_acnt
		from    
		(select  sales_dt, sum(sales_monthly) acount
		from    sales
		where   region_cd = #{region_cd}
		and     REGEXP_LIKE(tob_cd, 'Q|D|F')
		group by sales_dt)a)b
	</select>
	
	분석지역의 안정성 - 휴/폐업률 조회 (기간: 1년 통계)
	<select id="getCloseStoreRate" parameterType="long" resultType="float">
		select   round((cloz.cnt / total.cnt) * 100,2)
		from    
			(select  region_cd, bd_cl, sum(bd_cnt) cnt
			from    bd
			where   REGEXP_LIKE(tob_cd, 'Q|D|F')
			and     bd_cl = 1
			and     region_cd = #{region_cd}
			group by bd_cl, region_cd
			order by region_cd)total ,
			(select  region_cd, bd_cl, sum(bd_cnt) cnt
			from    bd
			where   REGEXP_LIKE(tob_cd, 'Q|D|F')
			and     bd_cl = 3
			and     region_cd = #{region_cd}
			group by bd_cl, region_cd
			order by region_cd)cloz
		where   total.region_cd = cloz.region_cd
	</select>
	
	분석지역의 구매력 - 상권매출규모 점수 조회
	<select id="getBdSalesVolume" parameterType="long" resultType="float">
		select   round(diff / 4 / 100 ,1)
		from
		(select  dd.sales_dt, dd.sale, total.sale, dd.sale - total.sale diff
		from  
		    (select  sales_dt, region_cd,round(avg(sales_monthly),1) sale
		    from    sales
		    where   sales_dt = (select to_number(substr(to_char(sysdate,'yyyyMM'),1,6)) -min(to_number(substr(to_char(sysdate,'yyyyMM'),1,6)) - sales_dt)-1
		                         from    sales)
		    and     regexp_like(tob_cd, 'Q|D|F')
		    and     region_cd = #{region_cd}
		    group by sales_dt, region_Cd) dd,
		    (select  sales_dt, round(avg(sales_monthly),1) sale, avg(sales_cnt)
		    from    sales
		    where   sales_dt = (select to_number(substr(to_char(sysdate,'yyyyMM'),1,6)) -min(to_number(substr(to_char(sysdate,'yyyyMM'),1,6)) - sales_dt)-1
		                         from    sales)
		    and     regexp_like(tob_cd, 'Q|D|F')
		    group by sales_dt) total) a
	</select>
	
	분석지역의 구매력 - 건당결제금액 점수환산 조회
	<select id="getBd_UnitCost" parameterType="long" resultType="float">
		select  round(diff / 3000,1)
		from
		    (select  b.aver - a.aver diff
		    from    
		        (select  round(avg(sp_unit_cost),1) aver
		        from    sales_present
		        where   regexp_like(tob_cd, 'Q|D|F'))a,
		        (select  round(avg(sp_unit_cost),1) aver
		        from    sales_present
		        where   regexp_like(tob_cd, 'Q|D|F')
		        and     region_cd = (select region_cd2 from region where region_cd = #{region_cd}) )b )
	</select>
	
	분석지역의 구매력 - 소비수준 점수환산 조회
	<select id="getBdConsumeLevel" parameterType="long" resultType="float">
		select   round(diff / 500,1)
		from
		(select  region_cd, pick.aver - total.aver diff
		from
		    (select  round(avg(sp_monthly),1) aver
		    from    sales_present
		    where   regexp_like(tob_Cd, 'Q|D|F')) total,
		    (select  region_cd, round(avg(sp_monthly),1) aver
		    from    sales_present
		    where   region_cd in (select region_cd2 from region where region_cd = 3014057500)
		    and     regexp_like(tob_cd,'Q|D|F')
		    group by region_Cd) pick )
	</select>
	
	분석지역의 집객력 - 유동인구 점수환산 조회
	<select id="getPpgScore" parameterType="long" resultType="int">	
	<![CDATA[
		select   case 
		            when res < 25000 then 5
		            when (res >= 25000) and (res < 60000) then 6
		            when (res >= 60000) and (res < 100000) then 7
		            when (res >= 100000) and (res < 150000) then 8
		            when (res >= 150000) and (res < 200000) then 9
		            when res >= 200000 then 10
		         end 
		from
		(select  ppg_dt, p.region_cd, r.region_name,  sum(ppg_cnt) res
		from    ppg p, region r
		where   p.region_cd = r.region_cd
		and     p.region_cd = #{region_cd}
		group by ppg_dt, p.region_cd, r.region_name)
	]]>
	</select>
	
		
	분석지역의 집객력 - 주거인구 점수환산 조회
	<select id="getLpScore" parameterType="long" resultType="float">
	<![CDATA[
		select  case   
		            when cnt < 9000 then 5
		            when cnt >= 9000 and cnt < 16000 then 5.5
		            when cnt >= 16000 and cnt < 25000 then 6.0
		            when cnt >= 25000 and cnt < 35000 then 6.5
		            when cnt >= 35000 and cnt < 45000 then 7.0
		            when cnt >= 45000 then 7.5
		        end 
		from
		(select  l.lp_dt, l.region_cd cd, r.region_name name, sum(lp_cnt) cnt
		from    lp L, region R
		where   l.region_cd = r.region_cd
		and     l.region_cd = #{region_cd}
		group by l.lp_dt, l.region_cd, r.region_name)
	]]>
	</select>
	
	분석지역의 집객력 - 직장인구 점수환산 조회
	<select id="getWpScore" parameterType="long" resultType="float">
	<![CDATA[
		select  case
		            when cnt < 3000 then 5.0
		            when cnt >= 3000 and cnt < 6000 then 5.5
		            when cnt >= 6000 and cnt < 9000 then 6.0
		            when cnt >= 9000 and cnt < 13000 then 6.5
		            when cnt >= 13000 and cnt < 25000 then 7.0
		            when cnt >= 25000 then 7.5
		        end 
		from
		(select  wp_dt, w.region_cd cd, r.region_name nm, sum(wp_cnt) cnt
		from    wp w, region r
		where   w.region_cd = r.region_cd
		and     w.region_cd = #{region_cd}
		group by wp_dt, w.region_cd, r.region_name)
	]]>
	</select> -->
	
	<!-- <<<<<<<<<<<< 상세평가지수 조회 >>>>>>>>>>>> -->
	
	<!-- 분석 지역의 상권평가지수 상세 조회 -->
	<select id="getEvaluationInfo" parameterType="long" resultType="evaluationVo">
		select  *
		from    evaluation
		where   region_cd = #{region_cd}
		and     evaluation_dt = (SELECT TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) -MIN(TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'yyyyMM'),1,6)) - SALES_DT)
		                             FROM    SALES)
	</select>
	
	<!-- 분석지역의 상권평가지수 상세조회 월별 리스트 -->
	<select id="getEvaluationList" parameterType="long" resultType="map">
		SELECT  EVALUATION_DT
		       ,REGION_CD
		       ,ROUND(EVALUATION_SALES_GROWTH + EVALUATION_IMPORTANT,1) growPt
		       ,ROUND(EVALUATION_VARIABILITY + EVALUATION_CLOSURE,1) stability
		       ,ROUND(EVALUATION_SALES_SCALE + EVALUATION_PAYMENT + EVALUATION_CONSUMPTIONLEVEL, 1) purchasePower
		       ,ROUND(EVALUATION_PP + EVALUATION_LP + EVALUATION_WP,1) visitPower
		FROM    EVALUATION
		WHERE   REGION_CD = #{region_cd}
		ORDER BY EVALUATION_DT
	</select>
	
	<!-- 
		분석지역의 상세평가지수 항목들의 각 4가지 부문의 점수와 즘감률을 조회 
		기간 : 가장 최신데이터의 날짜에서부터 직전월 까지 <== 2019.03 ~ 2019.04
	-->
	<select id="getEvalRateOfChange" parameterType="long" resultType="map">
		select  res.*
		from
		(select  evaluation_dt, region_cd
		       , round((growPt-growPrev)/growPrev * 100,1) growChange
		       , round((stability-stabilityPrev)/stabilityPrev * 100,1) stChange
		       , round((purchasePower-ppPrev)/ppPrev * 100, 1) ppChange
		       , round((visitPower-visitPrev)/visitPrev * 100,1) visitChange
		from
		(select  evaluation_dt, region_cd
		       ,growPt, lag(growPt) over(order by evaluation_dt) growPrev
		       ,stability, lag(growPt) over(order by evaluation_dt) stabilityPrev
		       ,purchasePower, lag(purchasePower) over(order by evaluation_dt) ppPrev
		       ,visitPower, lag(visitPower) over(order by evaluation_dt) visitPrev
		from
		(select  evaluation_dt
		       ,region_cd
		       ,round(EVALUATION_SALES_GROWTH + EVALUATION_IMPORTANT,1) growPt
		       ,round(EVALUATION_VARIABILITY + EVALUATION_CLOSURE,1) stability
		       ,round(EVALUATION_SALES_SCALE + EVALUATION_PAYMENT + EVALUATION_CONSUMPTIONLEVEL, 1) purchasePower
		       ,round(EVALUATION_PP + evaluation_lp + evaluation_wp,1) visitPower
		from    evaluation
		where   region_cd = 3023052000
		and     evaluation_dt >= (select to_number(to_char(to_date(max(evaluation_dt) - 1,'yyyyMM'),'yyyyMM'))
		                          from  evaluation)
		order by EVALUATION_DT))ff)res
		where   res.growChange is not null
	</select>
	
	<!-- <<<<<<<<<<<< 지역별 평가지수 조회 >>>>>>>>>>>> -->
	
	<!-- 분석 지역(동단위) 종합평가지수 및 월별 증감률 조회 -->
	<select id="getEvaluationTotal_dong" parameterType="long" resultType="RateOfChangeVo">
		select   growth.evaluation_Dt, growth.region_cd, growth.region_name, growth.total,  nvl(total - prev, 0) growPt
		from
		(select  res.*, lag(total) over(order by evaluation_dt) prev
		from
		(select  r.region_name, e.evaluation_dt, e.region_cd
		       ,evaluation_sales_growth
		       +evaluation_important
		       +evaluation_variability
		       +evaluation_closure
		       +evaluation_sales_scale
		       +evaluation_payment
		       +evaluation_pp
		       +evaluation_lp
		       +evaluation_wp
		       +evaluation_consumptionlevel total
		from    evaluation e, region r
		where   e.region_cd = r.region_cd
		and     e.region_cd = #{region_cd})res)growth
	</select>
	
	<!-- 분석 지역(구단위) 종합평가지수 및 월별 증감률 조회 -->
	<select id="getEvaluationTotal_gu" parameterType="long" resultType="RateOfChangeVo">
		select   growth.evaluation_dt, growth.region_cd, growth.region_name, total, nvl(total - prev, 0) growPt
		from
		(select  res.*, case mod(rn,6)
		                    when 1 then null
		                    else lag(total) over(order by evaluation_dt)
		                end prev
		from
		(select  a.*, rownum rn
		from
		(select  evaluation_Dt, r.region_name, substr(e.region_cd,1,5) region_cd
		       ,round(avg(evaluation_sales_growth),1)
		       +round(avg(evaluation_important),1)
		       +round(avg(evaluation_variability),1)
		       +round(avg(evaluation_closure),1)
		       +round(avg(evaluation_sales_scale),1)
		       +round(avg(evaluation_payment),1)
		       +round(avg(evaluation_pp),1)
		       +round(avg(evaluation_lp),1)
		       +round(avg(evaluation_wp),1)
		       +round(avg(evaluation_consumptionlevel),1) total
		from    evaluation e, region r
		where   substr(e.region_cd,1,5) = r.region_cd
		and     substr(e.region_cd,1,5) = (select region_cd2 from region where region_cd = #{region_cd})
		group by evaluation_Dt, substr(e.region_cd,1,5), r.region_name
		order by substr(e.region_cd,1,5))a)res)growth
	</select>
	
	<!-- 분석 지역(시전체) 종합평가지수 및 월별 증감률 조회 -->
	<select id="getEvaluationTotal_si" resultType="RateOfChangeVo">
		select  growth.evaluation_dt, 30 region_cd, '대전광역시' region_name, growth.total, nvl(total - prev,0) growPt
		from
		(select    a.*, lag(total) over(order by evaluation_dt) prev
		from
		(select   evaluation_dt
		       ,round(avg(evaluation_sales_growth),1)
		       +round(avg(evaluation_important),1)
		       +round(avg(evaluation_variability),1)
		       +round(avg(evaluation_closure),1)
		       +round(avg(evaluation_sales_scale),1)
		       +round(avg(evaluation_payment),1)
		       +round(avg(evaluation_pp),1)
		       +round(avg(evaluation_lp),1)
		       +round(avg(evaluation_wp),1)
		       +round(avg(evaluation_consumptionlevel),1) total
		from    evaluation
		group by evaluation_dt
		order by evaluation_dt)a)growth
	</select>
	
<!-- ========================== 업종분석 메뉴 ========================== -->
	
	<!-- <<<<<<<<<<<< 1.업종별 추이 >>>>>>>>>>>> -->
	
	<!-- 분석업종의 대분류/중분류/소분류 업종명 조회하기 -->
	<select id="getUpjongNames" parameterType="string" resultType="map">
		select  bot.tob_name bot, mid.tob_name mid, top.tob_name top
		from
		(select  * from tob where tob_Cd = #{tob_cd})bot,
		(select * from tob where tob_cd = substr(#{tob_cd},1,3))mid,
		(select * from tob where tob_cd = substr(#{tob_cd},1,1))top
	</select>
	
	<!-- 분석지역의 동/구/시 단위의 지역명 조회하기 -->
	<select id="getRegionNames" parameterType="long" resultType="map">
		select  dong.region_name dong, gu.region_name gu, '대전광역시' si
		from
		(select  * from region where region_cd = #{region_cd}) dong,
		(select  * from region where region_cd = substr(#{region_cd},1,5)) gu
	</select>
	
	<!-- 분석지역에 해당 분석업종의 업소수 및 증감률 조회 ( 201803월 이후부터 분기별로) -->
	<select id="getUpjongCntRosList_Bottom" parameterType="map" resultType="UpjongCntRosVo">
	<![CDATA[
		select   res.bd_dt, res.bd_cnt cnt, nvl(res.prev,0) prev, nvl(round((bd_cnt - prev)/bd_cnt * 100,1),0) ros
		from
		(select   a.*, lag(bd_cnt) over(order by bd_dt) prev
		from
		(select  *
		from
		(select  *
		from    bd
		where   tob_cd = #{tob_cd}
		and     region_cd = #{region_cd}
		and     bd_cl = 1
		and     bd_dt in (select to_number(to_char(add_months(dt, -lv), 'yyyyMM'))
                             from (select  (select to_date(max(bd_Dt),'yyyyMM') from bd ) dt
                            from dual) a, (Select level-1 lv from dual connect by level <= 13) b)))a)res
    ]]>
	</select>
	
	
	<!-- 분석지역에서 해당 분석업종의 상위 업종(중분류)의 업소수 및 증감률( 201803월 이후부터 분기별로) -->
	<select id="getUpjongCntRosList_Mid" parameterType="map" resultType="UpjongCntRosVo">
	<![CDATA[
		select   bd_dt, cnt, nvl(prev,0) prev, nvl(round((cnt-prev)/cnt * 100,1),0) ros 
		from
		(select  bd_dt, tob_cd, cnt, lag(cnt) over(order by bd_dt) prev
		from
		(select  bd_dt, substr(tob_cd,1,3) tob_cd, sum(bd_cnt) cnt
		from    bd b
		where   region_cd = #{region_cd}
		and     b.tob_cd like substr(#{tob_cd},1,3)||'%'
		and     bd_cl = 1
		and     bd_dt in (select to_number(to_char(add_months(dt, -lv), 'yyyyMM'))
                             from (select  (select to_date(max(bd_Dt),'yyyyMM') from bd ) dt
                            from dual) a, (Select level-1 lv from dual connect by level <= 13) b)
		group by bd_dt, substr(tob_cd,1,3) ))res
	]]>
	</select>

	<!-- 분석지역에서 해당 분석업종의 상위 업종(대분류)의 업소수 및 증감률( 201803월 이후부터 분기별로) -->
	<select id="getUpjongCntRosList_Top" parameterType="map" resultType="UpjongCntRosVo">
	<![CDATA[
		select  bd_dt, cnt,nvl(prev,0) prev, nvl(round((cnt-prev)/cnt * 100,1),0) ros
		from
		(select  bd_dt, tob_cd, cnt, lag(cnt) over(order by bd_dt) prev
		from
		(select  bd_dt, substr(tob_cd,1,1) tob_cd, sum(bd_cnt) cnt
		from    bd
		where   region_cd = #{region_cd}
		and     tob_cd like substr(#{tob_cd},1,1)||'%'
		and     bd_cl = 1
		and     bd_dt in (select to_number(to_char(add_months(dt, -lv), 'yyyyMM'))
                          from (select  (select to_date(max(bd_Dt),'yyyyMM') from bd ) dt
                          from dual) a, (Select level-1 lv from dual connect by level <= 13) b)
		group by bd_dt, substr(tob_cd,1,1)))res
	]]>
	</select>
	
	
	<!-- <<<<<<<<<<<< 2.지역별 추이 >>>>>>>>>>>> -->
	
	<!-- 해당 지역(동단위)안에서의 업소수 및 증감률 조회  -->
	<select id="getTobCntList_Dong" parameterType="map" resultType="UpjongCntRosVo">
	<![CDATA[
		select   bd_dt, cnt, nvl(prev,0) prev, nvl(round((cnt-prev)/prev * 100,1),0) ros 
		from
		(select  bd_Dt, bd_cnt cnt, lag(bd_cnt) over(order by bd_dt) prev
		from
		(select  *
		from    bd
		where   region_cd = #{region_cd}
		and     tob_cd = #{tob_cd}
		and     bd_cl = 1
		and     bd_dt in (select to_number(to_char(add_months(dt, -lv), 'yyyyMM'))
                             from (select  (select to_date(max(bd_Dt),'yyyyMM') from bd ) dt
                            from dual) a, (Select level-1 lv from dual connect by level <= 13) b)))res
	]]>                            
	</select>
	
	<!-- 분석 지역의 상위지역(구단위) 안에서 업소수 및 증감률 조회 -->
	<select id="getTobCntList_Gu" parameterType="map" resultType="UpjongCntRosVo">
	<![CDATA[
		select   bd_dt, cnt, nvl(prev,0) prev, nvl(round((cnt-prev)/prev * 100,1),0) ros
		from
		(select   bd_dt, cnt, lag(cnt) over(order by bd_dt) prev
		from
		(select  bd_dt, tob_cd, sum(bd_cnt) cnt
		from    bd
		where   region_cd like substr(#{region_cd},1,5) || '%'
		and     tob_cd = #{tob_cd}
		and     bd_cl = 1
		and     bd_dt in (select to_number(to_char(add_months(dt, -lv), 'yyyyMM'))
                             from (select  (select to_date(max(bd_Dt),'yyyyMM') from bd ) dt
                            from dual) a, (Select level-1 lv from dual connect by level <= 13) b)
		group by bd_dt, tob_cd))
	]]>    
	</select>
	
	<!-- 분석 지역의 상위지역(대전시 전체) 안에서 업소수 및 증감률 조회 -->
	<select id="getTobCntList_Si" parameterType="string" resultType="UpjongCntRosVo">
	<![CDATA[
		select   bd_dt, cnt, nvl(prev,0) prev, nvl(round((cnt-prev)/prev * 100, 1),0) ros
		from
		(select  bd_dt, cnt, lag(cnt) over(order by bd_dt) prev
		from
		(select  bd_dt, sum(bd_cnt) cnt
		from    bd
		where   bd_cl = 1
		and     tob_cd = #{tob_cd}
		and     bd_dt in (select to_number(to_char(add_months(dt, -lv), 'yyyyMM'))
                             from (select  (select to_date(max(bd_Dt),'yyyyMM') from bd ) dt
                            from dual) a, (Select level-1 lv from dual connect by level <= 13) b)
		group by bd_dt))res
	]]>
	</select>
	
<!-- ========================== 매출분석 메뉴 ========================== -->
	
	<!-- <<<<<<<<<<<< 1.업종별 매출추이 >>>>>>>>>>>> -->
	<!-- 기간 : 2018.11 ~ 2019.04 월별 -->
	
	<!-- 분석지역(동단위) 내에서 선택업종(소분류)의 월별 매출건수와 매출액 및 각 요소의 증감률을 조회 -->
	<select id="getTobSaleAndCnt_Bot" parameterType="map" resultType="sacRosVo">
		select  sales_dt
		       ,curSale, nvl(prevSale,0) prevSale, nvl(round((curSale-prevSale)/prevSale * 100, 1),0) saleRos
		       , curCnt, nvl(prevCnt,0) prevCnt, nvl(round((curCnt-prevCnt)/prevCnt * 100,1),0) cntRos
		from
		(select  sales_dt, tob_cd, region_cd 
		       ,sales_monthly curSale, lag(sales_monthly) over(order by sales_dt) prevSale
		       ,sales_cnt curCnt, lag(sales_cnt) over(order by sales_dt) prevCnt
		from
		(select  *
		from    sales
		where   region_cd = #{region_cd}
		and     tob_cd = #{tob_cd}))res
	</select>
	
	<!-- 분석지역(동단위) 내에서 선택업종(중분류)의 월별 매출건수와 매출액 및 각 요소의 증감률을 조회 -->
	<select id="getTobSaleAndCnt_Mid" parameterType="map" resultType="sacRosVo">
		select  sales_dt
		       ,round(curSale) curSale, nvl(round(prevSale),0) prevSale, nvl(round((curSale-prevSale)/prevSale * 100,1),0) saleRos
		       ,round(curCnt) curCnt, nvl(round(prevCnt),0) prevCnt, nvl(round((curCnt-prevCnt)/prevCnt * 100,1),0) cntRos
		from
		(select  sales_dt
		       ,curSale, lag(curSale) over(order by sales_dt) prevSale
		       ,curCnt, lag(curCnt) over(order by sales_dt) prevCnt
		from
		(select  sales_dt, avg(sales_monthly) curSale, avg(sales_cnt) curCnt
		from    sales
		where   region_cd = #{region_cd}
		and     tob_cd like substr(#{tob_cd},1,3)||'%'
		group by sales_Dt))res
	</select>
	
	<!-- 분석지역(동단위) 내에서 선택업종(대분류)의 월별 매출건수와 매출액 및 각 요소의 증감률을 조회 -->
	<select id="getTobSaleAndCnt_Top" parameterType="map" resultType="sacRosVo">
		select  sales_dt
		       ,round(curSale) curSale, nvl(round(prevSale),0) prevSale, nvl(round((curSale-prevSale)/prevSale * 100,1),0) saleRos
		       ,round(curCnt) curCnt, nvl(round(prevCnt),0) prevCnt, nvl(round((curCnt-prevCnt)/prevCnt * 100,1),0) cntRos
		from
		(select  sales_dt
		       ,curSale, lag(curSale) over(order by sales_dt) prevSale
		       ,curCnt, lag(curCnt) over(order by sales_dt) prevCnt
		from
		(select  sales_dt, avg(sales_monthly) curSale, avg(sales_cnt) curCnt
		from    sales
		where   region_cd = #{region_cd}
		and     tob_cd like substr(#{tob_cd},1,1)||'%'
		group by sales_Dt))res
	</select>
	
	<!-- <<<<<<<<<<<< 2.업종별 매출추이 >>>>>>>>>>>> -->
	<!-- 기간 : 2018.11 ~ 2019.04 월별 -->
	
	<!-- 선택 업종이 분석지역(동단위)내에서 월별 매출,매출건수 및 각 요소의 증감률을 조회 -->
	<select id="getRegSaleAndCnt_Dong" parameterType="map" resultType="sacRosVo">
		select  sales_dt
		       ,curSale, nvl(prevSale,0) prevSale, nvl(round((curSale-prevSale)/prevSale * 100, 1),0) saleRos
		       , curCnt, nvl(prevCnt,0) prevCnt, nvl(round((curCnt-prevCnt)/prevCnt * 100,1),0) cntRos
		from
		(select  sales_dt, tob_cd, region_cd 
		       ,sales_monthly curSale, lag(sales_monthly) over(order by sales_dt) prevSale
		       ,sales_cnt curCnt, lag(sales_cnt) over(order by sales_dt) prevCnt
		from
		(select  *
		from    sales
		where   region_cd = #{region_cd}
		and     tob_cd = #{tob_cd}))res
	</select>
	
	<!-- 선택 업종이 분석지역(구단위)내에서 월별 매출,매출건수 및 각 요소의 증감률을 조회 -->
	<select id="getRegSaleAndCnt_Gu" parameterType="map" resultType="sacRosVo">
		select  sales_dt
		       ,round(curSale) curSale, nvl(round(prevSale),0) prevSale, nvl(round((curSale-prevSale)/prevSale * 100,1),0) saleRos
		       ,round(curCnt) curCnt, nvl(round(prevCnt),0) prevCnt, nvl(round((curCnt-prevCnt)/prevCnt * 100,1),0) cntRos
		from
		(select  sales_dt
		       ,curSale, lag(curSale) over(order by sales_dt) prevSale
		       ,curCnt, lag(curCnt) over(order by sales_dt) prevCnt
		from
		(select  sales_dt, tob_cd, avg(sales_monthly) curSale, avg(sales_cnt) curCnt
		from    sales
		where   tob_cd = #{tob_cd}
		and     region_cd like substr(#{region_cd},1,5)||'%'
		group by sales_dt, tob_cd))res
	</select>
	
	<!-- 선택 업종이 분석지역(대전시 전체)내에서 월별 매출,매출건수 및 각 요소의 증감률을 조회 -->
	<select id="getRegSaleAndCnt_Si" parameterType="string" resultType="sacRosVo">
		select  sales_dt
		       ,round(curSale) curSale, nvl(round(prevSale),0) prevSale, nvl(round((curSale-prevSale)/prevSale * 100),0) saleRos
		       ,round(curCnt) curCnt, nvl(round(prevCnt),0) prevCnt, nvl(round((curCnt-prevCnt)/prevCnt * 100),0) cntRos
		from
		(select  sales_dt
		       ,curSale, lag(curSale) over(order by sales_dt) prevSale
		       ,curCnt, lag(curCnt) over(order by sales_dt) prevCnt
		from
		(select  sales_dt, tob_cd, avg(sales_monthly) curSale, avg(sales_cnt)curCnt
		from    sales
		where   tob_cd = #{tob_cd}
		group by sales_dt, tob_cd))res
	</select>
	
	
	<!-- <<<<<<<<<<<< 3.업종 생애주기 >>>>>>>>>>>> -->
	<!-- 
		bd상권 테이블에서는 최신데이터 날짜가 2019.03월
		sales매출 테이블에서는 최신데이터 날짜가 2019.04월
		
		==> 2019.03월 날짜로 통일해서 업소수 및 매출 증감률 데이터를 조회
	 -->
	
	<!-- 해당 분석지역 내에서 해당 업소의 증감률 조회 -->
	<select id="getTobLC_tobCnt" parameterType="map" resultType="map">
	<![CDATA[
		select   bd_dt, bd_cnt, round((bd_cnt-prev)/prev, 1) changeRate
		from
		(select   a.*, lag(bd_cnt) over(order by bd_dt) prev
		from
		(select  *
		from    bd
		where   region_cd = #{region_cd}
		and     tob_cd = #{tob_cd}
		and     bd_cl = 1
		and     bd_dt in (select   decode(mod(substr(bd_dt,5,2),3), 0, bd_dt)
		                from     bd
		                where    bd_dt >= (select  to_number(to_char(add_months(to_date(max(bd_Dt),'yyyyMM'),-3),'yyyyMM'))
		                            from    bd)
		                group by bd_dt))a) res
		where   bd_dt = (select  to_number(to_char(to_date(max(bd_dt),'yyyyMM'), 'yyyyMM'))
		                 from    bd)
	]]>
	</select>
	
	<!-- 해당 분석지역 내에서 해당 업종의 매출의 증감률을 조회 -->
	<select id="getTobLC_tobSale" parameterType="map" resultType="map">
	<![CDATA[
		select  sales_dt, round( ((sales_monthly - prev)/prev * 100 / 10) ,1) changeRate
		from
		(select  a.*, lag(sales_monthly) over(order by sales_dt) prev
		from
		(select  *
		from    sales
		where   region_cd = #{region_cd}
		and     tob_cd = #{tob_cd}
		and     sales_dt >= (select  to_number(to_char(add_months(to_date(max(sales_dt),'yyyyMM'),-2),'yyyyMM'))
		                      from    sales)
		and     sales_dt < (select  to_number(to_char(to_date(max(sales_dt),'yyyyMM'),'yyyyMM'))
		                    from    sales))a)res
		where   sales_dt > (select  to_number(to_char(add_months(to_date(max(sales_dt),'yyyyMM'),-2),'yyyyMM'))
		                      from    sales)
	]]>
	</select>
	
	
<!-- ========================== 인구분석 메뉴 ========================== -->

	<!-- <<<<<<<<<<<< 1.유동인구 >>>>>>>>>>>> -->
	
	<!-- 성별로 나눈 지역별 유동인구 통계 및 비율 조회 -->
	<select id="getPpgList" parameterType="long" resultType="map">
		select  a.ppg_dt, a.region_cd,a.ppg_gender, a.ppg_cnt, round(a.ppg_cnt/b.total * 100,1) ratio
		from
		(select  *
		from    ppg
		where   region_cd = #{region_cd}) a,
		(select  ppg_dt, sum(ppg_cnt) total
		from    ppg
		where   region_cd = #{region_cd}
		group by ppg_dt) b
	</select>
	
	<!-- 연령대별로 나눈 지역별 유동인구 통계 -->
	<select id="getPpaList" parameterType="long" resultType="ppaVo">
		select  a.ppa_dt, a.ppa_age_group, a.ppa_cnt, round((ppa_cnt/total) * 100,1) ppa_ratio
		from
		(select  *
		from    ppa
		where   region_cd = #{region_cd}) a,
		(select  ppa_dt, sum(ppa_cnt) total
		from    ppa
		where   region_cd = #{region_cd}
		group by ppa_dt) b
		order by ppa_age_group
	</select>
	

	<!-- <<<<<<<<<<<< 2.주거인구 >>>>>>>>>>>> -->
	
	<!-- 성별로 나눈 지역별 주거인구 조사 통계 및 비율 조회 -->
	<select id="getLpGenderList" parameterType="long" resultType="lpVo">
		select  a.lp_dt, lp_gender, a.lp_cnt,  round((lp_cnt/total)*100,1) lp_ratio
		from
		(select  lp_dt, lp_gender, sum(lp_cnt) lp_cnt
		from    lp
		where   region_cd = #{region_cd}
		group by lp_dt, lp_gender) a,
		(select  lp_dt, sum(lp_cnt) total
		from    lp
		where   region_cd = #{region_cd}
		group by lp_Dt) b
		order by lp_gender
	</select>
	
	<!-- 연령대별로 나눈 지역별 주거인구 조사 통계 및 비율 조회 -->
	<select id="getLpAgeGroupList" parameterType="long" resultType="lpVo">
		select  a.lp_dt, a.lp_age_group, a.lp_cnt, round((lp_cnt/total)*100,1) lp_ratio
		from
		(select  lp_dt, lp_age_group, sum(lp_cnt) lp_cnt
		from    lp
		where   region_cd = #{region_cd}
		group by lp_dt, lp_age_group) a,
		(select  lp_dt, sum(lp_cnt) total
		from    lp
		where   region_cd = #{region_cd}
		group by lp_Dt) b
		order by lp_age_group
	</select>
	
	<!-- 지역별 가구수와 비율(=100.0%)을 조회 -->
	<select id="getHouseHoldCnt" parameterType="long" resultType="map">
		select  region_cd, sum(apartment_cnt) cnt, '100.0%' ratio
		from    apartment
		where   region_cd = #{region_cd}
		group by region_cd 
	</select>
	
	<!-- 지역별 주거인구 전체 수와 비율(=100.0%)을 조회 -->
	<select id="getLpTotalCnt" parameterType="long" resultType="map">
		select  lp_dt, sum(lp_cnt) total, '100.0%' ratio
		from    lp
		where   region_cd = #{region_cd}
		group by lp_Dt
	</select>
	
	<!-- <<<<<<<<<<<< 3.직장인구 >>>>>>>>>>>> -->
	
	<!-- 선택지역 내 직장인구 현황을 성별로 구분해서 조회 -->
	<select id="getWpList" parameterType="long" resultType="wpVo">
		select  a.wp_dt, a.wp_gender, a.wp_cnt, round((a.wp_cnt/b.total)*100,1) wp_ratio
		from
		(select  *
		from    wp
		where   region_cd = #{region_cd}) a,
		(select  wp_dt, sum(wp_cnt) total
		from    wp
		where   region_cd = #{region_cd}
		group by wp_dt) b
		order by wp_gender
	</select>
	
	<!-- 선택지역 내 직장인구 전체수 및 비율(=100.0%) 조회 -->
	<select id="getWpTotalCnt" parameterType="long" resultType="map">
		select  wp_dt, sum(wp_cnt) total, '100.0%' ratio
		from    wp
		where   region_cd = #{region_cd}
		group by wp_dt
	</select>
	

	<!-- <<<<<<<<<<<< 4.공동주택 현황 >>>>>>>>>>>> -->
	
	<!-- 해당 분석지역 내 공동 주택 현황을 파악하기 위한 조회 쿼리문 -->
	<select id="getAptList" parameterType="long" resultType="aptVo">
		select  *
		from    apartment
		where   region_cd = #{region_cd}
	</select>
	
	
</mapper>